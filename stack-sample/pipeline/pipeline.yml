# YAML anchors
shared:
  - &task-get-commit
    task: get-commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cycloid/cycloid-toolkit
          tag: latest
      run:
        path: /bin/bash
        args:
        - -c
        - |
          DIR=${PWD}
          echo "git_code_commit = \"$(cat git_code/.git/ref)\"" | tee -a extracted-vars/terraform.tfvars
          echo "git_code_repo = \"${GIT_CODE_REPO}\"" | tee -a extracted-vars/terraform.tfvars
      params:
        ENV: ((env))
        GIT_CODE_REPO: ((code_git_public_repository))
      inputs:
        - name: git_code
      outputs:
        - name: extracted-vars
          path: "extracted-vars"

groups:
- name: overview
  jobs:
  - unittest
  - terraform-plan
  - terraform-apply

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: '0.12.24'

resources:
- name: tfstate
  type: terraform
  icon: terraform
  source:
    env_name: ((env))
    backend_type: azurerm
    backend_config:
      container_name: ((terraform_storage_container_name))
      key: ((terraform_storage_container_path))/((project))-((env)).tfstate
      resource_group_name: ((azure_resource_group_name))
      storage_account_name: ((terraform_storage_account_name))
      access_key: ((terraform_storage_access_key))
    vars:
      azure_resource_group_name: ((azure_resource_group_name))
      azure_location: ((azure_location))
      azure_env: ((azure_env))
      azure_client_id: ((azure_client_id))
      azure_client_secret: ((azure_client_secret))
      azure_subscription_id: ((azure_subscription_id))
      azure_tenant_id: ((azure_tenant_id))
      env: ((env))
      project: ((project))
      customer: ((customer))


# The Terraform stack (will be merged with the config)
- name: git_stack
  type: git
  source:
    uri: ((git_repository))
    branch: ((stack_git_branch))
    private_key: ((git_ssh_key))
    paths:
      - stack-sample/terraform/*


- name: git_code
  type: git
  source:
    uri: ((code_git_public_repository))
    branch: ((code_git_branch))

jobs:
  - name: unittest
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
    - do:
      - get: git_code
        trigger: true
      - task: test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cycloid/cycloid-toolkit
              tag: latest
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Testing the application"
              ls code
          inputs:
          - name: git_code
            path: code

  - name: terraform-plan
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
        - get: git_stack
          trigger: true
        - get: git_code
          trigger: true
          passed:
            - unittest
        - *task-get-commit
        - put: tfstate
          params:
            plan_only: true
            terraform_source: git_stack/stack-sample/terraform
            var_files:
              - extracted-vars/terraform.tfvars

  - name: terraform-apply
    build_logs_to_retain: 10
    plan:
      - do:
        - get: git_stack
          trigger: false
          passed:
            - terraform-plan
        - get: tfstate
          trigger: false
          passed:
            - terraform-plan
        - get: git_code
          passed:
            - terraform-plan
        - *task-get-commit
        - put: tfstate
          params:
            plan_run: true
            terraform_source: git_stack/stack-sample/terraform
            var_files:
              - extracted-vars/terraform.tfvars
